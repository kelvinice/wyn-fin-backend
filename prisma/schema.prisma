// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  secureId   String    @unique @default(uuid())
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  classifications Classification[]
  sources    Source[]
  periods    Period[]
}

model Classification {
  id         Int       @id @default(autoincrement())
  secureId   String    @unique @default(uuid())
  name       String
  color      String?   
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  budget     Budget[]
  spending   Spending[]
}

model Source {
  id         Int       @id @default(autoincrement())
  secureId   String    @unique @default(uuid())
  name       String
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
}

model Period {
  id         Int       @id @default(autoincrement())
  secureId   String    @unique @default(uuid())
  year       Int
  month      Int
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  budgets    Budget[]
  spending   Spending[]
}

model SpendingType {
  id         Int       @id @default(autoincrement())
  secureId   String    @unique @default(uuid())
  name       String
}

model Budget {
  id                Int     @id @default(autoincrement())
  secureId          String  @unique @default(uuid())
  periodId          Int
  classificationId  Int
  amount            Float
  period            Period  @relation(fields: [periodId], references: [id])
  classification    Classification @relation(fields: [classificationId], references: [id])
}

model Spending {
  id                Int     @id @default(autoincrement())
  secureId          String  @unique @default(uuid())
  periodId          Int
  classificationId  Int
  description       String
  amount            Float
  period            Period  @relation(fields: [periodId], references: [id])
  classification    Classification @relation(fields: [classificationId], references: [id])
}
